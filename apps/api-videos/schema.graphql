directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

type VideoTag {
  id: ID!
  title(languageId: ID, primary: Boolean): [Translation!]!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
}

extend type Query {
  videoTags: [VideoTag!]
  videoTag(id: ID!): VideoTag
  episodes(playlistId: ID!, idType: IdType, where: VideosFilter, offset: Int, limit: Int): [Video!]!
  videos(where: VideosFilter, offset: Int, limit: Int): [Video!]!
  video(id: ID!, idType: IdType): Video!
}

extend type Language
  @key(fields: "id")
{
  id: ID! @external
}

type Translation {
  value: String!
  language: Language!
  primary: Boolean!
}

enum IdType {
  databaseId
  slug
}

enum VideoType {
  episode
  standalone
  playlist
}

type Video
  @key(fields: "id primaryLanguageId")
{
  id: ID!
  type: VideoType!
  primaryLanguageId: ID!
  title(languageId: ID, primary: Boolean): [Translation!]!
  seoTitle(languageId: ID, primary: Boolean): [Translation!]!
  snippet(languageId: ID, primary: Boolean): [Translation!]!
  description(languageId: ID, primary: Boolean): [Translation!]!
  studyQuestions(languageId: ID, primary: Boolean): [Translation!]!
  image: String
  imageAlt(languageId: ID, primary: Boolean): [Translation!]!
  variantLanguages: [Language!]!

  """
  slug is a permanent link to the video. It should only be appended, not edited or deleted
  """
  slug(languageId: ID, primary: Boolean): [Translation!]!
  noIndex: Boolean

  """Episodes are child videos, currently only found in a playlist type"""
  episodeIds: [ID!]!
  episodes: [Video!]!
  variant(languageId: ID): VideoVariant
}

input VideosFilter {
  availableVariantLanguageIds: [ID!]
  title: String
  tagId: String
  types: [VideoType!]
}

enum VideoVariantDownloadQuality {
  low
  high
}

type VideoVariantDownload {
  quality: VideoVariantDownloadQuality!
  size: Float!
  url: String!
}

type VideoVariant {
  id: String!
  hls: String
  downloads: [VideoVariantDownload!]!
  duration: Int!
  language: Language!
  subtitle(languageId: ID, primary: Boolean): [Translation!]!
}

scalar _FieldSet

scalar _Any

type _Service {
  sdl: String
}

union _Entity = Language | Video